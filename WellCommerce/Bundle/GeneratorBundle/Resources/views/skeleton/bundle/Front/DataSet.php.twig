<?php
/*
 * WellCommerce Open-Source E-Commerce Platform
 *
 * This file is part of the WellCommerce package.
 *
 * (c) Adam Piotrowski <adam@wellcommerce.org>
 *
 * For the full copyright and license information,
 * please view the LICENSE file that was distributed with this source code.
 */

namespace {{ bundle.namespace }}\DataSet\Front;

use Doctrine\ORM\QueryBuilder;
use WellCommerce\Bundle\CoreBundle\DataSet\AbstractDataSet;
use WellCommerce\Component\DataSet\Configurator\DataSetConfiguratorInterface;

/**
 * Class {{ bundle.prefix }}DataSet
 */
class {{ bundle.prefix }}DataSet extends AbstractDataSet
{
    public function getIdentifier(): string
    {
        return 'front.{{ bundle.alias }}';
    }

    public function configureOptions(DataSetConfiguratorInterface $configurator)
    {
        $configurator->setColumns([
            'id'   => '{{ bundle.alias }}.id',
            'name' => '{{ bundle.alias }}_translation.name'
        ]);
    }

    protected function createQueryBuilder(): QueryBuilder
    {
        $queryBuilder = $this->repository->getQueryBuilder();
        $queryBuilder->groupBy('{{ bundle.alias }}.id');
        $queryBuilder->leftJoin('{{ bundle.alias }}.translations', '{{ bundle.alias }}_translation');

        return $queryBuilder;
    }
}
